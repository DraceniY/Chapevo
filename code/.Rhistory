install.packages("Cairo")
library(Cairo)
source('~/Dropbox/Private/SSB/paper/code/R/figure2_structaln.R')
install.packages("ggplot2")
source('~/Dropbox/Private/SSB/paper/code/R/alignment.R')
library(ggplot2)
library(matrixStats)
library(ggpubr)
install.packages("matrixStats")
par(mar=c(6,6,2,1))
asa <- read.table("data/processed/c3718.asa", sep='\t')
asa <- as.matrix(asa)
asa.mean <- colMeans(asa, na.rm=T)
asa.std <- colSds(asa, na.rm=T)
asa.std[is.na(asa.std)] <- 0
asa <- read.table("data/processed/c3718.asa", sep='\t')
setwd("~/Dropbox/Private/SSB/paper")
asa <- read.table("data/processed/c3718.asa", sep='\t')
asa <- as.matrix(asa)
asa.mean <- colMeans(asa, na.rm=T)
asa.std <- colSds(asa, na.rm=T)
asa.std[is.na(asa.std)] <- 0
asa2 <- data.frame(idx=c(1:length(asa.mean)), avrg=asa.mean, stnd=asa.std)
ggplot(asa2, aes(x=idx, y=avrg)) + geom_ribbon(aes(ymin=avrg-stnd, ymax=avrg+stnd), alpha=0.2) + geom_line() + theme_classic() + theme(axis.text.y = element_text(size=12) ) + ylab("ASA") + scale_color_manual(values=c("#666666")) + scale_y_continuous(breaks=c(0,100, 200))
ggplot(asa2, aes(x=idx, y=avrg)) + geom_ribbon(aes(ymin=avrg-stnd, ymax=avrg+stnd), alpha=0.2) + geom_line() + theme_classic() + theme(axis.text.y = element_text(size=12) ) + ylab("ASA") + scale_color_manual(values=c("#666666")) + scale_y_continuous(breaks=c(0,100, 200))
asa2 <- data.frame(idx=c(1:length(asa.mean)), avrg=asa.mean, stnd=asa.std)
asa.std[is.na(asa.std)] <- 0
asa.std <- colSds(asa, na.rm=T)
library(ggplot2)
library(matrixStats)
library(ggpubr)
asa <- read.table("data/processed/c3718.asa", sep='\t')
asa <- as.matrix(asa)
asa.mean <- colMeans(asa, na.rm=T)
asa.std <- colSds(asa, na.rm=T)
asa.std[is.na(asa.std)] <- 0
asa2 <- data.frame(idx=c(1:length(asa.mean)), avrg=asa.mean, stnd=asa.std)
ggplot(asa2, aes(x=idx, y=avrg)) + geom_ribbon(aes(ymin=avrg-stnd, ymax=avrg+stnd), alpha=0.2) + geom_line() + theme_classic() + theme(axis.text.y = element_text(size=12) ) + ylab("ASA") + scale_color_manual(values=c("#666666")) + scale_y_continuous(breaks=c(0,100, 200))
p <- ggplot(asa2, aes(x=idx, y=avrg)) + geom_ribbon(aes(ymin=avrg-stnd, ymax=avrg+stnd), alpha=0.2) + geom_line() + theme_classic() + theme(axis.text.y = element_text(size=12) ) + ylab("ASA") + scale_color_manual(values=c("#666666")) + scale_y_continuous(breaks=c(0,100, 200))
ggsave(filename = "figures/Figure2/asa_alignment.ps",
plot = print(p),
device = cairo_eps)
ggsave(filename = "figures/Figure2/asa_alignment.ps",
plot = print(p),
device = cairo_ps)
ggsave(filename = "figures/Figure2/asa_alignment.ps",
plot = print(p),
width=6, height=1,
device = cairo_ps)
p <- ggplot(asa2, aes(x=idx, y=avrg)) + geom_ribbon(aes(ymin=avrg-stnd, ymax=avrg+stnd), alpha=0.2) + geom_line(aes(size=0.8)) + theme_classic() + theme(axis.text.y = element_text(size=12) ) + ylab("ASA") + scale_color_manual(values=c("#666666")) + scale_y_continuous(breaks=c(0,100, 200))
ggsave(filename = "figures/Figure2/asa_alignment.ps",
plot = print(p),
width=6, height=1,
device = cairo_ps)
p <- ggplot(asa2, aes(x=idx, y=avrg)) + geom_ribbon(aes(ymin=avrg-stnd, ymax=avrg+stnd), alpha=0.3) + geom_line(aes(size=0.2)) + theme_classic() + theme(axis.text.y = element_text(size=12) ) + ylab("ASA") + scale_color_manual(values=c("#666666")) + scale_y_continuous(breaks=c(0,100, 200))
ggsave(filename = "figures/Figure2/asa_alignment.ps",
plot = print(p),
width=6, height=1,
device = cairo_ps)
p <- ggplot(asa2, aes(x=idx, y=avrg)) + geom_ribbon(aes(ymin=avrg-stnd, ymax=avrg+stnd), alpha=0.3) + geom_line(aes(size=1.2)) + theme_classic() + theme(axis.text.y = element_text(size=12) ) + ylab("ASA") + scale_color_manual(values=c("#666666")) + scale_y_continuous(breaks=c(0,100, 200))
ggsave(filename = "figures/Figure2/asa_alignment.ps",
plot = print(p),
width=6, height=1,
device = cairo_ps)
p <- ggplot(asa2, aes(x=idx, y=avrg)) + geom_ribbon(aes(ymin=avrg-stnd, ymax=avrg+stnd), alpha=0.3) + geom_line() + theme_classic() + theme(axis.text.y = element_text(size=12) ) + ylab("ASA") + scale_color_manual(values=c("#666666")) + scale_y_continuous(breaks=c(0,100, 200))
ggsave(filename = "figures/Figure2/asa_alignment.ps",
plot = print(p),
width=6, height=1,
device = cairo_ps)
1600 * 0.75
1861-316
1545 * 0.75
1545 * 0.75 * 0.9
1600*0.75
1600*0.75 * 1.15
86 / 498
68 / 498
27000^3
20000^3
10000^3
5000^3
1000^3
200/316
277/470
291/498
292/498
1723/60
296/472
298^2
298^2 / 2
43660 * 2 / 60 / 60 / 24
88/472
119/472
data <- read.table("~/chapevo/code/18SrRNA/pipeline_mapping/gaps_matrix_asym.txt")
plot(rowMeans(data))
plot(rowMeans(data))
install.package("myTAI")
install.packages("myTAI")
data <- read.table("~/chapevo/code/18SrRNA/pipeline_mapping/gaps_matrix_asym.tx")
data <- read.table("~/chapevo/code/18SrRNA/pipeline_mapping/gaps_matrix_asym_added.txt")
plot(colMeans(data))
data <- read.table("~/chapevo/code/18SrRNA/pipeline_mapping/gaps_matrix_asym_added2.txt")
plot(colMeans(data))
colMeans(data)[0:10]
data <- read.table("~/chapevo/code/18SrRNA/pipeline_mapping/gaps_matrix_asym_added3\.txt")
data <- read.table("~/chapevo/code/18SrRNA/pipeline_mapping/gaps_matrix_asym_added3.txt")
data <- read.table("~/chapevo/code/18SrRNA/pipeline_mapping/gaps_matrix_asym_added3.txt")
colSums(data)
colMeans(data)
sum( colMeans(data) < 0.15)
sum( colMeans(data) < 0.25)
sum( colMeans(data) < 0.20)
dim(data)
data
data[1:10, 1:10]
head(data)
sum(data, 1)
colMeans(data)
tree <- read.tree("~/chapevo/data/tree_15_8000.con.tre")
library(ape)
tree <- read.tree("~/chapevo/data/tree_15_8000.con.tre")
library(ggtree)
plot(tree)
plot(colMeans(data))
abline(h=0.25)
abline(h=0.3)
48*30
48*30 / 24
p <- sieve(1000000)
sieve <- function(n)
{
n <- as.integer(n)
if(n > 1e6) stop("n too large")
primes <- rep(TRUE, n)
primes[1] <- FALSE
last.prime <- 2L
for(i in last.prime:floor(sqrt(n)))
{
primes[seq.int(2L*last.prime, n, last.prime)] <- FALSE
last.prime <- last.prime + min(which(primes[(last.prime+1):n]))
}
which(primes)
}
p <- sieve(1000000)
for (i)
p
s <- 0
for (i in 1:length(p)){ s <- s + (p[i]+1)/(p[i]-1)}
s
s <- 0
for (i in 1:length(p)){ s <- s + ((p[i]+1)/(p[i]-1)) }
s
for (i in 1:length(p)){ s <- s + ((p[i]^2+1)/(p[i]^2-1)) }
s
s <- 0
s <- 1
for (i in 1:length(p)){ s <- s * ((p[i]^2+1)/(p[i]^2-1)) }
s
for (i in 5:1000){ s <- s * ((i^2+1)/(i^2-1)) }
s
s <- 0
for (i in 5:1000){ s <- s * ((i^2+1)/(i^2-1)) }
s
s <- 1
for (i in 5:1000){ s <- s * ((i^2+1)/(i^2-1)) }
s
setwd('~/chapevo/code/')
list_species <- scan("data/tree/tree_list_nodes.txt")
list_species <- scan("../data/tree/tree_list_nodes.txt")
list_species <- read.table("../data/tree/tree_list_nodes.txt")
# get taxonomy info
library(myTAI)
install.packages("myTAI")
# get taxonomy info
library(myTAI)
source("http://bioconductor.org/biocLite.R")
biocLite('myTAI')
# get taxonomy info
library(myTAI)
source("http://bioconductor.org/biocLite.R")
biocLite('myTAI')
library(myTAI)
